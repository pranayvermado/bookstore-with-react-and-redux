{"version":3,"sources":["components/images/cart.png","components/images/books.jpg","components/home.js","components/navbar.js","components/footer.js","components/book.jsx","redux/actions/actions.js","redux/actions/actionTypes.js","components/books.jsx","components/pricing.jsx","components/about.js","components/cart.jsx","components/checkout.jsx","history.js","App.js","serviceWorker.js","redux/reducer/shoppingCart.js","redux/reducer/index.js","redux/store.js","index.js"],"names":["module","exports","Home","className","to","href","role","NavBar","count","useSelector","state","ShoppingCartReducer","quantity","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","src","cartImage","Footer","Book","props","handleAddToCart","AddToCart","handleBuyNow","BuyNow","history","push","console","log","style","width","float","padding","this","data","bookName","toUpperCase","author","height","display","logo","alt","onClick","Component","withRouter","connect","content","payload","Books","error","isLoaded","items","item","message","map","key","fetch","then","res","json","result","setState","Pricing","onButtonClick","e","selectedDataStringPresentation","gridApi","getSelectedNodes","node","join","alert","columnDefs","headerName","field","sortable","filter","checkboxSelection","rowData","price","onGridReady","params","api","About","Cart","useState","book","setItems","useEffect","fetchItem","a","maxwidth","Checkout","contactPerson","address","emailAddress","city","region","zip","country","contactPersonError","addressError","emailAddressError","cityError","regionError","zipError","countryError","isSucess","handelFormSubmit","preventDefault","validAddress","ResetCart","isError","handleOnChange","event","target","name","value","Fragment","onSubmit","htmlFor","placeholder","onChange","color","createBrowserHistory","App","exact","path","component","Boolean","window","location","hostname","match","initialState","bookId","allBookIds","action","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bb29836d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.22a468f2.png\";","module.exports = __webpack_public_path__ + \"static/media/books.b30681b2.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1 className=\"display-3\">Hello, Welcome to the world of books!</h1>\r\n      <p className=\"lead\">\r\n        This is a simple hero unit, a simple jumbotron-style component for\r\n        calling extra attention to featured content or information.\r\n      </p>\r\n      <hr className=\"my-4\"></hr>\r\n      <p>\r\n        It uses utility classes for typography and spacing to space content out\r\n        within the larger container.\r\n      </p>\r\n      <p className=\"lead\">\r\n        <Link to=\"/Books\">\r\n          <a\r\n            className=\"btn btn-primary btn-lg\"\r\n            href=\"javascript:void();\"\r\n            role=\"button\"\r\n          >\r\n            Book Store\r\n          </a>\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cartImage from \"./images/cart.png\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const NavBar = () => {\r\n  const cart = useSelector((state) => state.ShoppingCartReducer);\r\n  const count = cart.quantity;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link to=\"/\">\r\n        <span className=\"navbar-brand\">Book Store</span>\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarColor02\"\r\n        aria-controls=\"navbarColor02\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <Link to=\"/Books\">\r\n            <li className=\"nav-item\">\r\n              <span className=\"nav-link\">Books</span>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/Pricing\">\r\n            <li className=\"nav-item\">\r\n              <span className=\"nav-link\">Pricing</span>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/About\">\r\n            <li className=\"nav-item\">\r\n              <span className=\"nav-link\">About</span>\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n        <Link to=\"/cart\">\r\n          <div className=\"form-inline my-2 my-lg-0\">\r\n            <img className=\"cart\" src={cartImage}></img>\r\n            <span className=\"badge\">{count}</span>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"footer bg-dark\">\r\n      <p> Book Store &copy; 2020 React App</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./images/books.jpg\";\r\nimport { connect } from \"react-redux\";\r\nimport { AddToCart, BuyNow } from \"../redux/actions/actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Book extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleAddToCart = (id) => {\r\n    this.props.AddToCart(id);\r\n  };\r\n\r\n  handleBuyNow = (id) => {\r\n    this.props.BuyNow(id);\r\n    this.props.history.push(\"/cart\");\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"1 book componentDidMount\");\r\n  }\r\n\r\n  render() {\r\n    const mystyle = {\r\n      height: \"200px\",\r\n      width: \"100%\",\r\n      display: \"block\",\r\n    };\r\n    return (\r\n      <div style={{ width: \"400px\", float: \"left\", padding: \"10px\" }}>\r\n        <div className=\"card mb-5\">\r\n          <h3 className=\"card-header\">\r\n            {this.props.data.bookName.toUpperCase()}\r\n          </h3>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              Author : {this.props.data.author.toUpperCase()}\r\n            </h5>\r\n          </div>\r\n          <img style={mystyle} src={logo} alt=\"Card image\"></img>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">Price : $10</p>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => this.handleAddToCart(this.props.data.id)}\r\n            >\r\n              Add to cart\r\n            </button>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={() => this.handleBuyNow(this.props.data.id)}\r\n            >\r\n              Buy Now\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(connect(null, { AddToCart, BuyNow })(Book));\r\n","import { ADD_TO_CART, BUY_NOW, RESET_CART } from \"./actionTypes\";\r\n\r\nexport const AddToCart = (content) => ({\r\n  type: ADD_TO_CART,\r\n  payload: {\r\n    id: content,\r\n    content,\r\n  },\r\n});\r\n\r\nexport const BuyNow = (content) => ({\r\n  type: BUY_NOW,\r\n  payload: {\r\n    id: content,\r\n    content,\r\n  },\r\n});\r\n\r\nexport const ResetCart = (content) => ({\r\n  type: RESET_CART,  \r\n});\r\n","export const ADD_TO_CART = \"ADD_TOCART\";\r\nexport const BUY_NOW = \"BUY_NOW\";\r\nexport const RESET_CART = \"RESET_CART\";\r\n","import React, { Component } from \"react\";\r\nimport Book from \"./book\";\r\n\r\nexport class Books extends Component {\r\n  state = {\r\n    error: null,\r\n    isLoaded: false,\r\n    items: [],\r\n    item: {},\r\n  };\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      item: {},\r\n    };\r\n    console.log(\"1 books Constructor\");\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"2 books componentWillMount\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"3 books render\");\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          {items.map((item) => (\r\n            <Book key={item.id} data={item}></Book>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"4 books componentDidMount\");\r\n    fetch(\"http://localhost:2315/api/Books\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: [\r\n              { id: 1, bookName: \"Harry potter\", author: \"JKR\" },\r\n              { id: 2, bookName: \"Goblet of fire\", author: \"JKR\" },\r\n              { id: 6, bookName: \"Two state\", author: \"chetan bhagat\" },\r\n              { id: 10, bookName: \"Quantico\", author: \"rusk\" },\r\n              { id: 11, bookName: \"Casino Royale\", author: \"Boon\" },\r\n              { id: 12, bookName: \"swades\", author: \"AGPP\" },\r\n              { id: 13, bookName: \"Jumanji\", author: \"Zoom\" },\r\n              { id: 14, bookName: \"The Monk sold his farrie\", author: \"scott\" },\r\n            ],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    console.log(\"5 books componentWillReceiveProps\");\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    console.log(\"6 books shouldComponentUpdate\");\r\n    return true;\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"7 books   componentWillUpdate\");\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"8 books   componentDidUpdate\");\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\r\n\r\nexport class Pricing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnDefs: [\r\n        {\r\n          headerName: \"Book Name\",\r\n          field: \"bookName\",\r\n          sortable: true,\r\n          filter: true,\r\n          checkboxSelection: true,\r\n        },\r\n        {\r\n          headerName: \"Author\",\r\n          field: \"author\",\r\n          sortable: true,\r\n          filter: true,\r\n        },\r\n        {\r\n          headerName: \"Price\",\r\n          field: \"price\",\r\n          sortable: true,\r\n          filter: true,\r\n        },\r\n      ],\r\n      rowData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/ag-grid/ag-grid/master/grid-packages/ag-grid-docs/src/sample-data/smallRowData.json\"\r\n    )\r\n      .then((result) => result.json())\r\n      .then((rowData) => {\r\n        rowData = [\r\n          { id: 1, bookName: \"Harry potter\", author: \"JKR\", price: 10 },\r\n          { id: 2, bookName: \"Goblet of fire\", author: \"JKR\", price: 10 },\r\n          { id: 6, bookName: \"Two state\", author: \"chetan bhagat\", price: 10 },\r\n          { id: 10, bookName: \"Quantico\", author: \"rusk\", price: 10 },\r\n          { id: 11, bookName: \"Casino Royale\", author: \"Boon\", price: 10 },\r\n          { id: 12, bookName: \"swades\", author: \"AGPP\", price: 10 },\r\n          { id: 13, bookName: \"Jumanji\", author: \"Zoom\", price: 10 },\r\n          {\r\n            id: 14,\r\n            bookName: \"The Monk sold his farrie\",\r\n            author: \"scott\",\r\n            price: 10,\r\n          },\r\n        ];\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n  onButtonClick = (e) => {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map((node) => node.data);\r\n    const selectedDataStringPresentation = selectedData\r\n      .map((node) => node.bookName + \" \" + node.author)\r\n      .join(\", \");\r\n    alert(`Selected nodes: ${selectedDataStringPresentation}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ height: \"400px\" }}\r\n        className=\"ag-theme-alpine-dark\"\r\n      >\r\n        <button onClick={this.onButtonClick}>Get selected rows</button>\r\n        <AgGridReact\r\n          onGridReady={(params) => (this.gridApi = params.api)}\r\n          columnDefs={this.state.columnDefs}\r\n          rowData={this.state.rowData}\r\n        ></AgGridReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"card text-white bg-dark mb-3\">\r\n      <div className=\"card-header\">Author</div>\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">Pranay Verma</h4>\r\n        <p className=\"card-text\">\r\n          Some quick example text to build on the card title and make up the\r\n          bulk of the card's content.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Cart(props) {\r\n  const cart = useSelector((state) => state.ShoppingCartReducer);\r\n  const count = cart.quantity;\r\n\r\n  const [book, setItems] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchItem();\r\n  }, []);\r\n\r\n  const fetchItem = async () => {\r\n    const item = await fetch(\r\n      \"https://fortnite-api.theapinetwork.com/store/get\"\r\n    );\r\n    const book = await item.json();\r\n    console.log(book)\r\n    setItems(book);\r\n  };\r\n\r\n  const checkout = () => {\r\n    console.log(props.history);\r\n    props.history.push(\"/checkout\");\r\n  };\r\n  const handelContinueShopping = () => {\r\n    props.history.push(\"/Books\");\r\n  };\r\n\r\n  return count > 0 ? (\r\n    <div\r\n      className=\"card text-white  bg-success mb-3\"\r\n      style={{ maxwidth: \"20rem\" }}\r\n    >\r\n      <div className=\"card-header\">Hurray !!! {count} Books added </div>\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text\">{book.bookName}</p>\r\n        <button className=\"btn btn-warning\" onClick={checkout}>\r\n          Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div\r\n      className=\"card text-white bg-warning mb-3\"\r\n      style={{ maxwidth: \"20rem\" }}\r\n    >\r\n      <div className=\"card-header\">\r\n        <h4>oops 0 Books</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <button className=\"btn btn-primary\" onClick={handelContinueShopping}>\r\n          Continue Shopping\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Cart;\r\n","import React, { Component } from \"react\";\r\nimport { ResetCart } from \"../redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nclass Checkout extends Component {\r\n  state = {\r\n    contactPerson: \"\",\r\n    address: \"\",\r\n    emailAddress: \"\",\r\n    city: \"\",\r\n    region: \"\",\r\n    zip: \"\",\r\n    country: \"\",\r\n    error: {\r\n      contactPersonError: \"\",\r\n      addressError: \"\",\r\n      emailAddressError: \"\",\r\n      cityError: \"\",\r\n      regionError: \"\",\r\n      zipError: \"\",\r\n      countryError: \"\",\r\n    },\r\n    isSucess: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handelFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.validAddress()) {\r\n      //alert(JSON.stringify(this.state));\r\n      this.setState({ isSucess: true });\r\n      this.props.ResetCart();\r\n    }\r\n    return;\r\n  };\r\n\r\n  validAddress = () => {\r\n    let isError = false;\r\n    if (!this.state.contactPerson) {\r\n      this.setState({ contactPersonError: \"Contact Person is required.\" });\r\n      isError = true;\r\n    }\r\n    if (!this.state.emailAddress) {\r\n      this.setState({ emailAddressError: \"Email is required.\" });\r\n      isError = true;\r\n    }\r\n    if (!this.state.address) {\r\n      this.setState({ addressError: \"Address is required.\" });\r\n      isError = true;\r\n    }\r\n    if (!this.state.city) {\r\n      this.setState({ cityError: \"City is required.\" });\r\n      isError = true;\r\n    }\r\n    if (!this.state.region) {\r\n      this.setState({ regionError: \"region is required.\" });\r\n      isError = true;\r\n    }\r\n    if (!this.state.zip) {\r\n      this.setState({ zipError: \"Zipcode is  required.\" });\r\n      isError = true;\r\n    }\r\n\r\n    return isError ? false : true;\r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.setState({ [event.target.name + \"Error\"]: \"\" });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.isSucess) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"jumbotron\">\r\n            <form className=\"form-group\" onSubmit={this.handelFormSubmit}>\r\n              <fieldset>\r\n                <h2> Shipping Address</h2>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">Contact Person</label>\r\n                  <input\r\n                    type=\"input\"\r\n                    className=\"form-control\"\r\n                    id=\"ContactPerson\"\r\n                    placeholder=\"Contact Person\"\r\n                    value={this.state.contactPerson}\r\n                    name=\"contactPerson\"\r\n                    onChange={this.handleOnChange}\r\n                  ></input>\r\n                  <div style={{ color: \"red\" }}>\r\n                    {this.state.contactPersonError}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">Email</label>\r\n                  <input\r\n                    type=\"input\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.emailAddress}\r\n                    name=\"emailAddress\"\r\n                    onChange={this.handleOnChange}\r\n                  ></input>\r\n                  <div style={{ color: \"red\" }}>\r\n                    {this.state.emailAddressError}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">Address</label>\r\n                  <input\r\n                    type=\"input\"\r\n                    className=\"form-control\"\r\n                    id=\"Address\"\r\n                    placeholder=\"Address\"\r\n                    value={this.state.address}\r\n                    name=\"address\"\r\n                    onChange={this.handleOnChange}\r\n                  ></input>\r\n                  <div style={{ color: \"red\" }}>{this.state.addressError}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">City/Town</label>\r\n                  <input\r\n                    type=\"input\"\r\n                    className=\"form-control\"\r\n                    id=\"citytown\"\r\n                    placeholder=\"City/Town\"\r\n                    value={this.state.city}\r\n                    name=\"city\"\r\n                    onChange={this.handleOnChange}\r\n                  ></input>\r\n                  <div style={{ color: \"red\" }}>{this.state.cityError}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">\r\n                    State / Province / Region\r\n                  </label>\r\n                  <input\r\n                    type=\"input\"\r\n                    className=\"form-control\"\r\n                    id=\"region\"\r\n                    placeholder=\" State / Province / Region\"\r\n                    value={this.state.region}\r\n                    name=\"region\"\r\n                    onChange={this.handleOnChange}\r\n                  ></input>\r\n                  <div style={{ color: \"red\" }}>{this.state.regionError}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">\r\n                    Zip / Postal Code\r\n                  </label>\r\n                  <input\r\n                    type=\"input\"\r\n                    className=\"form-control\"\r\n                    id=\"zip\"\r\n                    placeholder=\"Zip / Postal Code\"\r\n                    value={this.state.zip}\r\n                    name=\"zip\"\r\n                    onChange={this.handleOnChange}\r\n                  ></input>\r\n                  <div style={{ color: \"red\" }}>{this.state.zipError}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select className=\"form-control\" id=\"exampleSelect2\">\r\n                    <option>India</option>\r\n                    <option>USA</option>\r\n                  </select>\r\n                </div>\r\n              </fieldset>\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n          }\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <h1>Thank you for shopping with us.</h1>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, { ResetCart })(Checkout)\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Home } from \"./components/home\";\r\nimport { NavBar } from \"./components/navbar\";\r\nimport { Footer } from \"./components/footer\";\r\nimport { Books } from \"./components/books\";\r\nimport { Pricing } from \"./components/pricing\";\r\nimport { About } from \"./components/about\";\r\nimport Cart from \"./components/cart\";\r\nimport Checkout from \"./components/checkout\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport history from \"./history\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <BrowserRouter history={history}>\r\n        <NavBar></NavBar>\r\n        <div className=\"App-header\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home}></Route>\r\n            <Route exact path=\"/Books\" component={Books}></Route>\r\n            <Route exact path=\"/Pricing\" component={Pricing}></Route>\r\n            <Route exact path=\"/About\" component={About}></Route>\r\n            <Route exact path=\"/Cart\" component={Cart}></Route>\r\n            <Route exact path=\"/Checkout\" component={Checkout}></Route>\r\n          </Switch>\r\n        </div>\r\n        <Footer></Footer>\r\n      </BrowserRouter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ADD_TO_CART, BUY_NOW, RESET_CART } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  bookId: 0,\r\n  quantity: 0,\r\n  allBookIds: [],\r\n};\r\n\r\nconst ShoppingCartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        allBookIds: [...state.allBookIds, id],\r\n        quantity: state.quantity + 1,\r\n        bookId: 0,\r\n      };\r\n    }\r\n    case BUY_NOW: {\r\n      const { id, content } = action.payload;\r\n      return {\r\n        ...state,\r\n        allBookIds: [...state.allBookIds, id],\r\n        quantity: 1,\r\n        bookId: id,\r\n      };\r\n    }\r\n    case RESET_CART: {     \r\n      return {\r\n        ...state,\r\n        allBookIds: [],\r\n        quantity: 0,\r\n        bookId: 0,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ShoppingCartReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport ShoppingCartReducer from \"./shoppingCart\";\r\n\r\nconst rootReducer = combineReducers({ ShoppingCartReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./static/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}